name: Publish NuGet

on:
  push:
    branches: [ "main" ]
  
jobs:
  build-pack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x   
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: publish
      run: dotnet pack ./Airtable.EFCore/Airtable.EFCore.csproj --no-build --verbosity normal --output ./obj/output
    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: package
        path: './obj/output'
  publish-internal:
    runs-on: ubuntu-latest
    needs: build-pack
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: package
        path: './obj/output'
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        source-url: https://nuget.pkg.github.com/uaresponders/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} 
    - name: Push generated package to GitHub registry
      run: dotnet nuget push ./obj/output/*.nupkg --skip-duplicate --source  https://nuget.pkg.github.com/uaresponders/index.json --api-key ${GITHUB_TOKEN} --no-symbols
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-nuget:
    runs-on: ubuntu-latest
    needs: build-pack
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: package
        path: './obj/output'
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Push generated package to Nuget.org
      run: dotnet nuget push ./obj/output/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}

